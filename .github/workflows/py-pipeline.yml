name: py-pipeline

on: [push]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest

  build:
    needs: [tests]
    runs-on: ubuntu-latest
    env:
        REGISTRY: docker.pkg.github.com
        IMAGE_PATH: aboulay/kata-roman
        IMAGE_NAME: kata-roman
        USERNAME: aboulay
    steps:
    - uses: actions/checkout@master
    - name: login in Registry
      run: |
        docker login $REGISTRY --username $USERNAME --password ${{ secrets.DOCKER_PASSWORD }}
    - name: build Dockerfile
      run: |
        export SHORTSHA=$(echo $GITHUB_SHA | cut -c 1-8)
        echo $SHORTSHA
        docker build . -t $REGISTRY/$IMAGE_PATH/$IMAGE_NAME:$SHORTSHA
        docker tag $REGISTRY/$IMAGE_PATH/$IMAGE_NAME:$SHORTSHA $REGISTRY/$IMAGE_PATH/$IMAGE_NAME:latest
    - name: push in registry
      run : |
        docker push $REGISTRY/$IMAGE_PATH/$IMAGE_NAME:$SHORTSHA
        docker push $REGISTRY/$IMAGE_PATH/$IMAGE_NAME:latest
